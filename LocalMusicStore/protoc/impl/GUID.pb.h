// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GUID.proto

#ifndef PROTOBUF_GUID_2eproto__INCLUDED
#define PROTOBUF_GUID_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Arcusical {
namespace LocalMusicStore {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GUID_2eproto();
void protobuf_AssignDesc_GUID_2eproto();
void protobuf_ShutdownFile_GUID_2eproto();

class GUID;

// ===================================================================

class GUID : public ::google::protobuf::Message {
 public:
  GUID();
  virtual ~GUID();

  GUID(const GUID& from);

  inline GUID& operator=(const GUID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GUID& default_instance();

  void Swap(GUID* other);

  // implements Message ----------------------------------------------

  GUID* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GUID& from);
  void MergeFrom(const GUID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes rawData = 1;
  inline bool has_rawdata() const;
  inline void clear_rawdata();
  static const int kRawDataFieldNumber = 1;
  inline const ::std::string& rawdata() const;
  inline void set_rawdata(const ::std::string& value);
  inline void set_rawdata(const char* value);
  inline void set_rawdata(const void* value, size_t size);
  inline ::std::string* mutable_rawdata();
  inline ::std::string* release_rawdata();
  inline void set_allocated_rawdata(::std::string* rawdata);

  // @@protoc_insertion_point(class_scope:Arcusical.LocalMusicStore.GUID)
 private:
  inline void set_has_rawdata();
  inline void clear_has_rawdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* rawdata_;
  friend void  protobuf_AddDesc_GUID_2eproto();
  friend void protobuf_AssignDesc_GUID_2eproto();
  friend void protobuf_ShutdownFile_GUID_2eproto();

  void InitAsDefaultInstance();
  static GUID* default_instance_;
};
// ===================================================================


// ===================================================================

// GUID

// required bytes rawData = 1;
inline bool GUID::has_rawdata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GUID::set_has_rawdata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GUID::clear_has_rawdata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GUID::clear_rawdata() {
  if (rawdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rawdata_->clear();
  }
  clear_has_rawdata();
}
inline const ::std::string& GUID::rawdata() const {
  // @@protoc_insertion_point(field_get:Arcusical.LocalMusicStore.GUID.rawData)
  return *rawdata_;
}
inline void GUID::set_rawdata(const ::std::string& value) {
  set_has_rawdata();
  if (rawdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rawdata_ = new ::std::string;
  }
  rawdata_->assign(value);
  // @@protoc_insertion_point(field_set:Arcusical.LocalMusicStore.GUID.rawData)
}
inline void GUID::set_rawdata(const char* value) {
  set_has_rawdata();
  if (rawdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rawdata_ = new ::std::string;
  }
  rawdata_->assign(value);
  // @@protoc_insertion_point(field_set_char:Arcusical.LocalMusicStore.GUID.rawData)
}
inline void GUID::set_rawdata(const void* value, size_t size) {
  set_has_rawdata();
  if (rawdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rawdata_ = new ::std::string;
  }
  rawdata_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Arcusical.LocalMusicStore.GUID.rawData)
}
inline ::std::string* GUID::mutable_rawdata() {
  set_has_rawdata();
  if (rawdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rawdata_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Arcusical.LocalMusicStore.GUID.rawData)
  return rawdata_;
}
inline ::std::string* GUID::release_rawdata() {
  clear_has_rawdata();
  if (rawdata_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rawdata_;
    rawdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GUID::set_allocated_rawdata(::std::string* rawdata) {
  if (rawdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rawdata_;
  }
  if (rawdata) {
    set_has_rawdata();
    rawdata_ = rawdata;
  } else {
    clear_has_rawdata();
    rawdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Arcusical.LocalMusicStore.GUID.rawData)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace LocalMusicStore
}  // namespace Arcusical

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GUID_2eproto__INCLUDED
